apiVersion: postgresql.cnpg.io/v1
kind: Cluster
metadata:
  namespace: melitix
  name: db-prod
spec:
  imageName: ghcr.io/cloudnative-pg/postgis:16-3.4
  instances: 3
  storage:
    size: 5Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: melitix
  name: webapp-prod
  labels:
    app: webapp
    environment: production
spec:
  replicas: 2
  selector:
    matchLabels:
      app: webapp
      environment: production
  template:
    metadata:
      labels:
        app: webapp
        environment: production
    spec:
      imagePullSecrets:
      - name: ghcr
      containers:
      - name: webapp
        image: "ghcr.io/eventhunt-org/webapp:latest"
        env:
        - name: APP_ENVIRONMENT
          value: "production"
        - name: APP_HOST
          value: "demo.eventhunt.org"
        - name: DB_USER
          value: "app"
        - name: DB_PASS
          valueFrom:
            secretKeyRef:
              name: db-prod-app
              key: password
        - name: DB_HOST
          value: "db-prod-rw"
        - name: DB_PORT
          value: "5432"
        - name: DB_NAME
          value: "app"
        - name: EMAIL_USER
          value: "SMTP_Injection"
        - name: EMAIL_PASS
          valueFrom:
            secretKeyRef:
              name: smtp-auth
              key: token
        - name: EMAIL_HOST
          value: "smtp.sparkpostmail.com"
        - name: AUTH_SESSION_KEY
          valueFrom:
            secretKeyRef:
              name: auth-prod-creds
              key: auth-session-key
        ports:
        - containerPort: 9000
---
apiVersion: v1
kind: Service
metadata:
  namespace: melitix
  name: webapp-prod
  labels:
    app: webapp
    environment: production
spec:
  type: ClusterIP
  selector:
    app: webapp
    environment: production
  ports:
    - protocol: TCP
      name: http
      port: 9000
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  namespace: melitix
  name: webapp-prod
  labels:
    app: webapp
    environment: production
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt-production"
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - demo.eventhunt.org
    secretName: webapp-prod-tls
  rules:
  - host: demo.eventhunt.org
    http:
      paths:
      - pathType: Prefix
        path: "/"
        backend:
          service:
            name: webapp-prod
            port:
              number: 9000
